{"version":3,"sources":["Workspace/TranslationHelps/HelpsTab.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Component","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_styles__WEBPACK_IMPORTED_MODULE_3__","TextComponentWithRCLinks","lazy","Promise","all","e","then","bind","TranslationNotes","AlignedWord","_ref","classes","tab","addTab","open","context","setContext","content","a","createElement","text","notes","map","note","index","key","original","wordObject","link","replace","concat","languageId","originalWords","verseObject","words","word","fallback","withStyles","styles","withTheme"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,MAUMW,EAA2BC,eAAK,kBAAMC,QAAAC,IAAA,CAAAd,EAAAe,EAAA,GAAAf,EAAAe,EAAA,MAAAC,KAAAhB,EAAAiB,KAAA,cACtCC,EAAmBN,eAAK,kBAAMC,QAAAC,IAAA,CAAAd,EAAAe,EAAA,GAAAf,EAAAe,EAAA,MAAAC,KAAAhB,EAAAiB,KAAA,cAC9BE,EAAcP,eAAK,kBAAMZ,EAAAe,EAAA,IAAAC,KAAAhB,EAAAiB,KAAA,cAElBb,EAAY,SAAAgB,GAOnBA,EANJC,QAMI,IALJC,EAKIF,EALJE,IACAC,EAIIH,EAJJG,OACAC,EAGIJ,EAHJI,KACAC,EAEIL,EAFJK,QACAC,EACIN,EADJM,WAGIC,EAAUrB,EAAAsB,EAAAC,cAAA,YACd,GAAIL,EACF,GAAIF,EAAIQ,KACNH,EAAUrB,EAAAsB,EAAAC,cAAClB,EAAD,CACRmB,KAAMR,EAAIQ,KACVP,OAAQA,EACRE,QAASA,EACTC,WAAYA,SAET,GAAIJ,EAAIS,MACbJ,EAAUL,EAAIS,MAAMC,IAAI,SAACC,EAAMC,GAAP,OACtB5B,EAAAsB,EAAAC,cAACX,EAAD,CACEiB,IAAKD,EACLD,KAAMA,EACNV,OAAQA,EACRE,QAASA,EACTC,WAAYA,WAGX,GAAIJ,EAAIc,SAAU,CAEvBT,EADoBL,EAAIc,SACFJ,IAAI,SAACK,EAAYH,GACrC,IAAMI,EAAOD,EAAWC,KAAKC,QAAQ,UAAxB,UAAAC,OAA6Cf,EAAQgB,WAArD,MACPC,EAAgBL,EAAWK,cAAcV,IAAI,SAACW,EAAaT,GAAd,OACjD5B,EAAAsB,EAAAC,cAACV,EAAD,CAAagB,IAAKD,EAAOS,YAAaA,MAElCb,EAAI,GAAAU,OAAMF,GAChB,OACEhC,EAAAsB,EAAAC,cAAA,OAAKM,IAAKD,GACR5B,EAAAsB,EAAAC,cAACpB,EAAA,QAAD,MACAH,EAAAsB,EAAAC,cAAClB,EAAD,CACEmB,KAAMA,EACNP,OAAQA,EACRE,QAASA,EACTC,WAAYA,IAEbgB,UAIEpB,EAAIsB,MACbjB,EAAUL,EAAIsB,MAAMZ,IAAI,SAACa,EAAMX,GAC7B,OACE5B,EAAAsB,EAAAC,cAAA,OAAKM,IAAKD,GACR5B,EAAAsB,EAAAC,cAACpB,EAAA,QAAD,MACAH,EAAAsB,EAAAC,cAAClB,EAAD,CACEmB,KAAMe,EACNtB,OAAQA,EACRE,QAASA,EACTC,WAAYA,OAKXJ,EAAIK,UACbA,EAAUL,EAAIK,SAIlB,OACErB,EAAAsB,EAAAC,cAACxB,EAAA,SAAD,CAAUyC,SAAUxC,EAAAsB,EAAAC,cAAA,aACjBF,IAeQoB,+BAAWC,IAAQ,CAAEC,WAAW,GAAhCF,CAAwC3C","file":"static/js/9.45bc6353.chunk.js","sourcesContent":["import React, {Suspense, lazy} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Divider,\n  CircularProgress,\n} from '@material-ui/core';\n\nimport styles from './styles';\n\nconst TextComponentWithRCLinks = lazy(() => import('./TextComponentWithRCLinks'));\nconst TranslationNotes = lazy(() => import('./TranslationNotes'));\nconst AlignedWord = lazy(() => import('../Scripture/ScriptureView/VerseObject/AlignedWords/AlignedWord'));\n\nexport const Component = ({\n  classes,\n  tab,\n  addTab,\n  open,\n  context,\n  setContext,\n}) => {\n\n  let content = <div/>;\n  if (open) {\n    if (tab.text) {\n      content = <TextComponentWithRCLinks\n        text={tab.text}\n        addTab={addTab}\n        context={context}\n        setContext={setContext}\n      />;\n    } else if (tab.notes) {\n      content = tab.notes.map((note, index) =>\n        <TranslationNotes\n          key={index}\n          note={note}\n          addTab={addTab}\n          context={context}\n          setContext={setContext}\n        />\n      );\n    } else if (tab.original) {\n      const wordObjects = tab.original;\n      content = wordObjects.map((wordObject, index) => {\n        const link = wordObject.link.replace('rc://*/', `http://${context.languageId}/`);\n        const originalWords = wordObject.originalWords.map((verseObject, index) =>\n          <AlignedWord key={index} verseObject={verseObject} />\n        );\n        const text = `${link}`;\n        return (\n          <div key={index}>\n            <Divider />\n            <TextComponentWithRCLinks\n              text={text}\n              addTab={addTab}\n              context={context}\n              setContext={setContext}\n            />\n            {originalWords}\n          </div>\n        );\n      });\n    } else if (tab.words) {\n      content = tab.words.map((word, index) => {\n        return (\n          <div key={index}>\n            <Divider />\n            <TextComponentWithRCLinks\n              text={word}\n              addTab={addTab}\n              context={context}\n              setContext={setContext}\n            />\n          </div>\n        );\n      });\n    } else if (tab.content) {\n      content = tab.content;\n    }\n  }\n\n  return (\n    <Suspense fallback={<div/>}>\n      {content}\n    </Suspense>\n  );\n}\n\nComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  context: PropTypes.object.isRequired,\n  setContext: PropTypes.func.isRequired,\n  tab: PropTypes.object.isRequired,\n  addTab: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Component);\n"],"sourceRoot":""}