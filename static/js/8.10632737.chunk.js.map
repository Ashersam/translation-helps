{"version":3,"sources":["Workspace/TranslationHelps/styles.js","Workspace/TranslationHelps/Component.js"],"names":["styles","theme","root","backgroundColor","palette","background","paper","width","appBar","zIndex","margin","hidden","padding","concat","spacing","unit","tabContent","__webpack_require__","r","__webpack_exports__","d","Component","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_styles__WEBPACK_IMPORTED_MODULE_3__","HelpsTab","lazy","e","then","bind","_ref","classes","context","setContext","tabs","addTab","tabIndex","handleChangeIndex","id","tabLabels","tabContents","badgeCount","forEach","tab","index","text","notes","length","original","wordObjects","words","content","badge","a","createElement","className","color","badgeContent","title","push","key","label","open","fallback","currentTab","position","value","onChange","indicatorColor","textColor","variant","scrollButtons","withStyles","withTheme"],"mappings":"2FAwBeA,IAxBO,SAAAC,GAAK,MAAK,CAC9BC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,MAAO,QAETA,MAAO,CACLA,MAAO,QAETC,OAAQ,CACND,MAAO,MACPE,OAAQ,KACRC,OAAQ,QAEVC,OAAQ,GAGRC,QAAS,CACPA,QAAO,KAAAC,OAA4B,EAArBZ,EAAMa,QAAQC,KAArB,OAETC,WAAY,CACVJ,QAAO,KAAAC,OAA4B,EAArBZ,EAAMa,QAAQC,KAArB,4CCpBXE,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,MAYMW,EAAWC,eAAK,kBAAMZ,EAAAa,EAAA,GAAAC,KAAAd,EAAAe,KAAA,cAEfX,EAAY,SAAAY,GASnB,IARJC,EAQID,EARJC,QACAC,EAOIF,EAPJE,QACAC,EAMIH,EANJG,WACAC,EAKIJ,EALJI,KACAC,EAIIL,EAJJK,OACAC,EAGIN,EAHJM,SACAC,EAEIP,EAFJO,kBACAC,EACIR,EADJQ,GAEIC,EAAY,GACZC,EAAc,GACdC,EAAa,EAEjBP,EAAKQ,QAAQ,SAACC,EAAKC,GACjB,GAAID,EAAIE,KACNJ,EAAa,OACR,GAAIE,EAAIG,MACbL,EAAaE,EAAIG,MAAMC,YAClB,GAAIJ,EAAIK,SAAU,CACvB,IAAMC,EAAcN,EAAIK,SACxBP,EAAaQ,EAAYF,YAChBJ,EAAIO,MACbT,EAAaE,EAAIO,MAAMH,OACdJ,EAAIQ,UACbV,EAAaE,EAAIQ,QAAQJ,QAE3B,IAAMK,EACJhC,EAAAiC,EAAAC,cAAC/B,EAAA,MAAD,CAAOgC,UAAWxB,EAAQtB,QAAS+C,MAAM,UAAUC,aAAchB,GAC9DE,EAAIe,OAGTnB,EAAUoB,KACRvC,EAAAiC,EAAAC,cAAC/B,EAAA,IAAD,CAAKqC,IAAKrB,EAAUQ,OAAQc,MAASpB,EAAa,EAAKW,EAAQT,EAAIe,SAErE,IAAMI,EAAQlB,IAAUR,EACxBI,EAAYmB,KACVvC,EAAAiC,EAAAC,cAAA,OAAKM,IAAKpB,EAAYO,OAAQQ,UAAYO,EAAO/B,EAAQlB,WAAakB,EAAQvB,QAC5EY,EAAAiC,EAAAC,cAACnC,EAAA,SAAD,CAAU4C,SAAU3C,EAAAiC,EAAAC,cAAA,aAClBlC,EAAAiC,EAAAC,cAAC7B,EAAD,CACEkB,IAAKA,EACLR,OAAQA,EACR2B,KAAMA,EACN9B,QAASA,EACTC,WAAYA,SAMtB,IAAM+B,EAAaxB,EAAYJ,GAE/B,OACEhB,EAAAiC,EAAAC,cAAA,OAAKhB,GAAIA,EAAIiB,UAAWxB,EAAQhC,MAC9BqB,EAAAiC,EAAAC,cAAC/B,EAAA,OAAD,CAAQgC,UAAWxB,EAAQ1B,OAAQ4D,SAAS,SAAST,MAAM,WACzDpC,EAAAiC,EAAAC,cAAC/B,EAAA,KAAD,CACEgC,UAAWxB,EAAQ3B,MACnB8D,MAAO9B,EACP+B,SAAU9B,EACV+B,eAAe,UACfC,UAAU,UACVC,QAAQ,aACRC,cAAc,QAEbhC,IAGLnB,EAAAiC,EAAAC,cAAA,OAAKC,UAAWxB,EAAQ3B,OACrB4D,KAgBMQ,+BAAW3E,IAAQ,CAAE4E,WAAW,GAAhCD,CAAwCtD","file":"static/js/8.10632737.chunk.js","sourcesContent":["export const styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '100%',\n  },\n  width: {\n    width: '100%',\n  },\n  appBar: {\n    width: '95%',\n    zIndex: '10',\n    margin: 'auto',\n  },\n  hidden: {\n    // height: '0px',\n  },\n  padding: {\n    padding: `0 ${theme.spacing.unit * 2}px`,\n  },\n  tabContent: {\n    padding: `0 ${theme.spacing.unit * 3}px`,\n  }\n});\n\nexport default styles;\n","import React, {Suspense, lazy} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Tabs,\n  Tab,\n  Badge,\n} from '@material-ui/core';\n\nimport styles from './styles';\n\nconst HelpsTab = lazy(() => import('./HelpsTab'));\n\nexport const Component = ({\n  classes,\n  context,\n  setContext,\n  tabs,\n  addTab,\n  tabIndex,\n  handleChangeIndex,\n  id,\n}) => {\n  let tabLabels = [];\n  let tabContents = [];\n  let badgeCount = 0;\n\n  tabs.forEach((tab, index) => {\n    if (tab.text) {\n      badgeCount = 0;\n    } else if (tab.notes) {\n      badgeCount = tab.notes.length;\n    } else if (tab.original) {\n      const wordObjects = tab.original;\n      badgeCount = wordObjects.length;\n    } else if (tab.words) {\n      badgeCount = tab.words.length;\n    } else if (tab.content) {\n      badgeCount = tab.content.length;\n    }\n    const badge = (\n      <Badge className={classes.padding} color=\"primary\" badgeContent={badgeCount}>\n        {tab.title}\n      </Badge>\n    );\n    tabLabels.push(\n      <Tab key={tabLabels.length} label={ (badgeCount > 0) ? badge : tab.title } />\n    );\n    const open = (index === tabIndex);\n    tabContents.push(\n      <div key={tabContents.length} className={ open ? classes.tabContent : classes.hidden }>\n        <Suspense fallback={<div />}>\n          <HelpsTab\n            tab={tab}\n            addTab={addTab}\n            open={open}\n            context={context}\n            setContext={setContext}\n          />\n        </Suspense>\n      </div>);\n  });\n\n  const currentTab = tabContents[tabIndex];\n\n  return (\n    <div id={id} className={classes.root}>\n      <AppBar className={classes.appBar} position=\"sticky\" color=\"default\">\n        <Tabs\n          className={classes.width}\n          value={tabIndex}\n          onChange={handleChangeIndex}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          {tabLabels}\n        </Tabs>\n      </AppBar>\n      <div className={classes.width}>\n        {currentTab}\n      </div>\n    </div>\n  );\n}\n\nComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  context: PropTypes.object.isRequired,\n  setContext: PropTypes.func.isRequired,\n  tabs: PropTypes.array.isRequired,\n  addTab: PropTypes.func.isRequired,\n  handleChangeIndex: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Component);\n"],"sourceRoot":""}